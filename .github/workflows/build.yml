name: Build distribution
on:
  workflow_dispatch:
  push:
  schedule:
  - cron: '0 0 * * MON'
jobs:
  build-stage-1:
    name: Build bootstrap LLVM
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Install dependencies
      run: bash ci.sh do_deps
    - name: Build
      run: bash ci.sh do_bootstrap
    - name: Pack artifact
      if: always()
      run: bash ci.sh do_pack
    - uses: actions/upload-artifact@main
      if: always()
      with:
        name: build-stage-1
        path: artifact.tar

  build-stage-2:
    name: Build instrumented LLVM
    needs: build-stage-1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: actions/download-artifact@main
      with:
        name: build-stage-1
    - name: Install dependencies and unpack artifact
      run: bash ci.sh "do_deps && do_unpack"
    - name: Build
      run: bash ci.sh do_instrumented
    - name: Pack artifact
      if: always()
      run: bash ci.sh do_pack
    - uses: actions/upload-artifact@main
      if: always()
      with:
        name: build-stage-2
        path: artifact.tar

  build-stage-3:
    name: Profile instrumented LLVM
    needs: build-stage-2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: actions/download-artifact@main
      with:
        name: build-stage-2
    - name: Install dependencies and unpack artifact
      run: bash ci.sh "do_deps && do_unpack"
    - name: Profile
      run: bash ci.sh do_profiling
    - name: Pack artifact
      if: always()
      run: bash ci.sh do_pack
    - uses: actions/upload-artifact@main
      if: always()
      with:
        name: build-stage-3
        path: artifact.tar

  build-stage-4:
    name: Build final LLVM
    needs: build-stage-3
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: actions/download-artifact@main
      with:
        name: build-stage-3
    - name: Install dependencies and unpack artifact
      run: bash ci.sh "do_deps && do_unpack"
    - name: Build
      run: bash ci.sh do_final
    - name: Pack artifact
      if: always()
      run: bash ci.sh do_pack
    - uses: actions/upload-artifact@main
      if: always()
      with:
        name: build-stage-4
        path: artifact.tar

  build-stage-5:
    name: Make distribution with binutils
    needs: build-stage-4
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: actions/download-artifact@main
      with:
        name: build-stage-4
    - name: Install dependencies and unpack artifact
      run: bash ci.sh "do_deps && do_unpack"
    - name: Build binutils
      run: bash ci.sh do_binutils
    - name: Add finishing touches
      run: bash ci.sh do_fixup
    - name: Make .tar.xz distribution
      run: bash ci.sh do_dist
    - uses: actions/upload-artifact@main
      with:
        name: distribution
        path: toolchain-build.tar.xz
    - name: Generate revision
      run: echo "REVISION=$(bash ci.sh do_revision)" >> $GITHUB_ENV
    - uses: softprops/action-gh-release@v2.1.0
      with:
        tag_name: ${{env.REVISION}}
        body_path: revision-notes.md
        files: toolchain-build.tar.xz
    - name: Pack artifact
      if: always()
      run: bash ci.sh do_pack
    - uses: actions/upload-artifact@main
      if: always()
      with:
        name: build-stage-5
        path: artifact.tar
